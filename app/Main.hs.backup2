module Main (main) where

import Control.Concurrent
import Users
-- import Messages
-- import System.IO
-- import System.Random
-- import Text.StringRandom

create_user :: Int -> String -> User
create_user id_parse username_parse = User {user_id = id_parse, username = username_parse}

main :: IO ()
main = do
    forkIO $ test_function (create_user 1 "Person 1")
    forkIO $ test_function (create_user 2 "Person 2")
    forkIO $ test_function (create_user 3 "Person 3")
    forkIO $ test_function (create_user 4 "Person 4")
    forkIO $ test_function (create_user 5 "Person 5")
    forkIO $ test_function (create_user 6 "Person 6")
    forkIO $ test_function (create_user 7 "Person 7")
    forkIO $ test_function (create_user 8 "Person 8")
    forkIO $ test_function (create_user 9 "Person 9")
    forkIO $ test_function (create_user 10 "Person 10")
    return ()

    -- forkIO $ create_user_thread 1 test_user
    -- mapM_ (forkIO $ create_user_thread 1) user_list
    -- mapM_ forkIO

-- x full_arr remaining_arr val = 


-- create_user_thread :: Int -> User -> IO ()
-- create_user_thread pointless_num user = do
--     print(user_id user)

test_function :: User -> IO ()
test_function user_test = do
    -- print user_test
    putStrLn ""

-- create_message_thread :: User -> User -> 